@model RLIM.UserInterface.Models.SubItemModel

@{
    ViewData["Title"] = $"Update Sub-Item for {ViewData["MainItemName"]}";
}

<h1>@ViewData["Title"]</h1>
<hr />
<div class="form-container">
    <form action="Update" method="post" asp-antiforgery="true">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="CertificateID" class="control-label"></label>
            <select asp-for="CertificateID" class="form-control">
                <option value="0">No Certificate</option>
                @foreach (CertificateModel certificate in ViewBag.Certificates)
                {
                    <option value="@certificate.ID">@certificate.Display</option>
                }
            </select>
            <span asp-validation-for="CertificateID" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="ColorID" class="control-label"></label>
            <select asp-for="ColorID" class="form-control">
                <option value="0">Default</option>
                @foreach (ColorModel color in ViewBag.Colors)
                {
                    <option value="@color.ID">@color.Display</option>
                }
            </select>
            <span asp-validation-for="ColorID" class="text-danger"></span>
        </div>

        <div class="form-group row justify-content-between">
            <input asp-for="ID" type="hidden" />
            <input asp-for="MainItemID" type="hidden" />
            <input asp-for="MainItemDisplay" type="hidden" />
            <input type="submit" value="Update" class="btn btn-primary" />
            <a href="../../Sub-Items" class="btn btn-outline-primary">Back to Sub-Items</a>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
