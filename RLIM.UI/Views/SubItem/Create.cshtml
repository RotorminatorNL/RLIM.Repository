@model RLIM.UI.Models.SubItemModel

@{
    ViewData["Title"] = "Create Sub-Item";
}

<h1>@ViewData["Title"] for @Html.DisplayNameFor(model => model.MainItemDisplay)</h1>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-controller="SubItem" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="CertificateID" class="control-label"></label>
                <select asp-for="CertificateID" asp-items="@(new SelectList(ViewBag.Certificates,"ID","Display"))" class="form-control">
                    <option>Select Category</option>
                </select>
                <span asp-validation-for="CertificateID" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ColorID" class="control-label"></label>
                <select asp-for="ColorID" asp-items="@(new SelectList(ViewBag.Colors,"ID","Display"))" class="form-control">
                    <option>Select Platform</option>
                </select>
                <span asp-validation-for="ColorID" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input asp-for="MainItemID" type="hidden" />
                <input type="submit" value="Create" class="btn btn-primary" />
                &nbsp;
                <a asp-controller="MainItem" asp-action="Index" class="btn btn-outline-primary">Back to Main-items</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}